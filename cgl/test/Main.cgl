externc func putchar(char c);

typedef AudioSample : uint16;

func print(string s) {
	for (int i = 0; i < s.length; i++) {
		putchar(s[i]);
	}
}

func println(string s) {
	print(s);
	putchar('\n');
}

public func main() {
	const maximumNumberOfLoginAttempts = 10;
	int currentLoginAttempt = 0;

	var x = 0.0, y = 0.0, z = 0.0;
	float f;
	double d;

	string friendlyWelcome = "Hello!";
	friendlyWelcome = "Bonjour!";

	println(friendlyWelcome);

	int i0 = int.min, i1 = int.max;

	const meaningOfLife = 42;
	const pi = 3.141592653589793238462643383279;
	const anotherPi = 3 + 0.14159;

	const decimalInteger = 17;
	const binaryInteger = 0b10001;
	const octalInteger = 0o21;
	const hexadecimalInteger = 0x11;

	const paddedDouble = 000123.456;
	const oneMillion = 1_000_000;
	const justOverOneMillion = 1_000_000.000_000_1;

	//uint8 cannotBeNegative = -1;
	//int8 tooBig = int8.max + 1;

	const twoThousand = uint16(2_000);
	const one = uint8(1);
	const twoThousandAndOne = twoThousand + one;

	const three = 3;
	const pointOneFourOneFiveNine = 0.14159;
	const pi2 = three + pointOneFourOneFiveNine;

	const integerPi = int(pi2);

	const orangesAreOrange = true;
	const turnipsAreDelicious = false;

	if turnipsAreDelicious {
		println("Mmm, tasty turnips!");
	} else {
		println("Eww, turnips are horrible.");
	}

	const i = 1;
	if i {
		
	}

	const:(int, string) http404Error = (404, "Not Found");
	println(http404Error.1);

	const possibleNumber = "-123";
	const convertedNumber = int(possibleNumber);
	const convertedNumberStr = string(convertedNumber);
	println(convertedNumberStr);

	int? serverResponseCode = 404;
	serverResponseCode = null;

	string? surveyAnswer;
	surveyAnswer = "slakfjklsdjf";

	if surveyAnswer {
		println(surveyAnswer.value);
	}

	const age = -3;
	//assert(age >= 0);

	int a = 5;
	int b;

	//if a = b { // Error
	//}

	for (int j = 0; j < 5; j++) {
	}

	//for (const a : list) {
	//}

	// Tuple decomposition
	//const (x, y) = (1, 2);

	// Null-coalescing operator
	int? g = 5;
	int h = g ?? 6;
}
