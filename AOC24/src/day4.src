import snek.file;
import snek.string;
import snek.math;


bool CheckLetter(string[] lines, int x, int y, char c)
{
	if x >= 0 && x < lines[0].length && y >= 0 && y < lines.length
	{
		return lines[y][x] == c;
	}
	return false;
}

char GetLetter(string[] lines, int x, int y)
{
	if x >= 0 && x < lines[0].length && y >= 0 && y < lines.length
	{
		return lines[y][x];
	}
	return 0;
}

public void day4()
{
	string input = file.readText("input4.txt");
	string[] lines = split(input, '\n');
	int width = lines[0].length;
	int height = lines.length;
	
	int result = 0;
	for (int y = 0; y < height; y++)
	{
		for (int x = 0; x < width; x++)
		{
			char c = lines[y][x];
			if CheckLetter(lines, x, y, 'X')
			{
				for (int dx = -1; dx <= 1; dx++)
				{
					for (int dy = -1; dy <= 1; dy++)
					{
						if dx != 0 || dy != 0
						{
							if CheckLetter(lines, x + dx, y + dy, 'M') &&
								CheckLetter(lines, x + 2 * dx, y + 2 * dy, 'A') &&
								CheckLetter(lines, x + 3 * dx, y + 3 * dy, 'S')
								result++;
						}
					}
				}
			}
		}
	}
	
	println("Result: %", result);
	
	int result2 = 0;
	for (int y = 0; y < height; y++)
	{
		for (int x = 0; x < width; x++)
		{
			char c = lines[y][x];
			if CheckLetter(lines, x, y, 'A')
			{
				char topleft = GetLetter(lines, x - 1, y - 1);
				char topright = GetLetter(lines, x + 1, y - 1);
				char bottomleft = GetLetter(lines, x - 1, y + 1);
				char bottomright = GetLetter(lines, x + 1, y + 1);
				
				if topleft + bottomright == 'M' + 'S' && abs(topleft - bottomright) == 'S' - 'M' &&
					topright + bottomleft == 'M' + 'S' && abs(topright - bottomleft) == 'S' - 'M'
					result2++;
			}
		}
	}
	
	println("Result 2: %", result2);
}
